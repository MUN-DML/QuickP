{"directed": true, "multigraph": false, "graph": {}, "nodes": [{"mem": 0, "op_type": "Placeholder", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [200, 32, 32, 3], "output_type": "float32", "id": "input"}, {"mem": 0, "op_type": "Placeholder", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [200, 1], "output_type": "uint8", "id": "target"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [2], "output_type": "int32", "id": "sequential_1/flatten_1/Reshape/shape"}, {"mem": 0, "op_type": "Reshape", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [200, 3072], "output_type": "float32", "id": "sequential_1/flatten_1/Reshape"}, {"mem": 0, "op_type": "Placeholder", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "resource", "id": "sequential_1/dense_1/Cast/ReadVariableOp/resource"}, {"mem": 0, "op_type": "ReadVariableOp", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [3072, 10], "output_type": "float32", "id": "sequential_1/dense_1/Cast/ReadVariableOp"}, {"mem": 8192, "op_type": "MatMul", "comp_cost": {"mock_device_0": 16.058993611588864, "mock_device_1": 15.754501016920871}, "output_size": [200, 10], "output_type": "float32", "id": "sequential_1/dense_1/MatMul"}, {"mem": 0, "op_type": "Placeholder", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "resource", "id": "sequential_1/dense_1/Add/ReadVariableOp/resource"}, {"mem": 0, "op_type": "ReadVariableOp", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [10], "output_type": "float32", "id": "sequential_1/dense_1/Add/ReadVariableOp"}, {"mem": 0, "op_type": "AddV2", "comp_cost": {"mock_device_0": 1.0233872293802846, "mock_device_1": 1.0237574818898683}, "output_size": [200, 10], "output_type": "float32", "id": "sequential_1/dense_1/Add"}, {"mem": 0, "op_type": "Softmax", "comp_cost": {"mock_device_0": 4.913102637447661, "mock_device_1": 5.072941013346013}, "output_size": [200, 10], "output_type": "float32", "id": "sequential_1/dense_1/Softmax"}, {"mem": 0, "op_type": "Cast", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [200, 1], "output_type": "float32", "id": "sparse_categorical_crossentropy/Cast"}, {"mem": 0, "op_type": "Cast", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [200, 1], "output_type": "int64", "id": "sparse_categorical_crossentropy/Cast_1"}, {"mem": 0, "op_type": "Squeeze", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [200], "output_type": "int64", "id": "sparse_categorical_crossentropy/Squeeze"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [1], "output_type": "int32", "id": "sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/Shape"}, {"mem": 0, "op_type": "SparseSoftmaxCrossEntropyWithLogits", "comp_cost": {"mock_device_0": 17.254774688925902, "mock_device_1": 17.388358237070154}, "output_size": [200], "output_type": "float32", "id": "sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [1], "output_type": "int32", "id": "sparse_categorical_crossentropy/Const"}, {"mem": 256, "op_type": "Sum", "comp_cost": {"mock_device_0": 0.955952586481013, "mock_device_1": 0.9942117132719329}, "output_size": [], "output_type": "float32", "id": "sparse_categorical_crossentropy/Sum"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [1], "output_type": "int32", "id": "sparse_categorical_crossentropy/Shape"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [1], "output_type": "int32", "id": "sparse_categorical_crossentropy/Const_1"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [1], "output_type": "int32", "id": "sparse_categorical_crossentropy/Const_2"}, {"mem": 0, "op_type": "Prod", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "int32", "id": "sparse_categorical_crossentropy/Prod"}, {"mem": 0, "op_type": "Cast", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "sparse_categorical_crossentropy/Cast_2"}, {"mem": 0, "op_type": "RealDiv", "comp_cost": {"mock_device_0": 0.991474873606647, "mock_device_1": 0.9943156702586868}, "output_size": [], "output_type": "float32", "id": "sparse_categorical_crossentropy/truediv"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "add/y"}, {"mem": 0, "op_type": "AddV2", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "add"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "ones"}, {"mem": 0, "op_type": "RealDiv", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "gradient_tape/sparse_categorical_crossentropy/truediv/RealDiv"}, {"mem": 0, "op_type": "Neg", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "gradient_tape/sparse_categorical_crossentropy/truediv/Neg"}, {"mem": 0, "op_type": "RealDiv", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "gradient_tape/sparse_categorical_crossentropy/truediv/RealDiv_1"}, {"mem": 0, "op_type": "RealDiv", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "gradient_tape/sparse_categorical_crossentropy/truediv/RealDiv_2"}, {"mem": 0, "op_type": "Mul", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "gradient_tape/sparse_categorical_crossentropy/truediv/mul"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [0], "output_type": "int32", "id": "gradient_tape/sparse_categorical_crossentropy/truediv/Shape"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [0], "output_type": "int32", "id": "gradient_tape/sparse_categorical_crossentropy/truediv/Shape_1"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [1], "output_type": "int32", "id": "gradient_tape/sparse_categorical_crossentropy/Reshape/shape"}, {"mem": 0, "op_type": "Reshape", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [1], "output_type": "float32", "id": "gradient_tape/sparse_categorical_crossentropy/Reshape"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [1], "output_type": "int32", "id": "gradient_tape/sparse_categorical_crossentropy/Const"}, {"mem": 0, "op_type": "Tile", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [200], "output_type": "float32", "id": "gradient_tape/sparse_categorical_crossentropy/Tile"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "int32", "id": "gradient_tape/sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/ExpandDims/dim"}, {"mem": 0, "op_type": "ExpandDims", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [200, 1], "output_type": "float32", "id": "gradient_tape/sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/ExpandDims"}, {"mem": 0, "op_type": "Mul", "comp_cost": {"mock_device_0": 1.0418848710362738, "mock_device_1": 1.0629485192462076}, "output_size": [200, 10], "output_type": "float32", "id": "gradient_tape/sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/mul"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [2], "output_type": "int32", "id": "gradient_tape/sequential_1/dense_1/Add/Shape"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [1], "output_type": "int32", "id": "gradient_tape/sequential_1/dense_1/Add/Shape_1"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [1], "output_type": "int32", "id": "gradient_tape/sequential_1/dense_1/Add/Sum/reduction_indices"}, {"mem": 0, "op_type": "Sum", "comp_cost": {"mock_device_0": 2.8777230980020794, "mock_device_1": 2.8993932460420995}, "output_size": [1, 10], "output_type": "float32", "id": "gradient_tape/sequential_1/dense_1/Add/Sum"}, {"mem": 0, "op_type": "Reshape", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [10], "output_type": "float32", "id": "gradient_tape/sequential_1/dense_1/Add/Reshape"}, {"mem": 122880, "op_type": "MatMul", "comp_cost": {"mock_device_0": 10.635187107449516, "mock_device_1": 10.637605375331137}, "output_size": [3072, 10], "output_type": "float32", "id": "gradient_tape/sequential_1/dense_1/MatMul/MatMul"}, {"mem": 0, "op_type": "Identity", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [3072, 10], "output_type": "float32", "id": "adam/Identity"}, {"mem": 0, "op_type": "Identity", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [10], "output_type": "float32", "id": "adam/Identity_1"}, {"mem": 0, "op_type": "IdentityN", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [3072, 10], "output_type": "float32", "id": "adam/IdentityN"}, {"mem": 0, "op_type": "Placeholder", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "resource", "id": "adam/Cast/ReadVariableOp/resource"}, {"mem": 0, "op_type": "ReadVariableOp", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "adam/Cast/ReadVariableOp"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "int64", "id": "adam/Const"}, {"mem": 0, "op_type": "Placeholder", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "resource", "id": "adam/ReadVariableOp/resource"}, {"mem": 0, "op_type": "ReadVariableOp", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "int64", "id": "adam/ReadVariableOp"}, {"mem": 0, "op_type": "AddV2", "comp_cost": {"mock_device_0": 1.042776445489956, "mock_device_1": 1.018454238722782}, "output_size": [], "output_type": "int64", "id": "adam/add"}, {"mem": 0, "op_type": "Cast", "comp_cost": {"mock_device_0": 1.0086373187348379, "mock_device_1": 0.9764613961914225}, "output_size": [], "output_type": "float32", "id": "adam/Cast_1"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "adam/Cast_2/x"}, {"mem": 0, "op_type": "Pow", "comp_cost": {"mock_device_0": 1.0246821116502123, "mock_device_1": 1.0114320369451333}, "output_size": [], "output_type": "float32", "id": "adam/Pow"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "adam/Cast_3/x"}, {"mem": 256, "op_type": "Pow", "comp_cost": {"mock_device_0": 0.9587527869583061, "mock_device_1": 0.9970557574936743}, "output_size": [], "output_type": "float32", "id": "adam/Pow_1"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "adam/sub/x"}, {"mem": 0, "op_type": "Sub", "comp_cost": {"mock_device_0": 1.0053952733697853, "mock_device_1": 0.9955418053299886}, "output_size": [], "output_type": "float32", "id": "adam/sub"}, {"mem": 0, "op_type": "Sqrt", "comp_cost": {"mock_device_0": 1.008895454564772, "mock_device_1": 1.0131974636897385}, "output_size": [], "output_type": "float32", "id": "adam/Sqrt"}, {"mem": 0, "op_type": "Mul", "comp_cost": {"mock_device_0": 1.0360344771324712, "mock_device_1": 1.0141003178396306}, "output_size": [], "output_type": "float32", "id": "adam/mul"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "adam/sub_1/x"}, {"mem": 0, "op_type": "Sub", "comp_cost": {"mock_device_0": 0.980802005325448, "mock_device_1": 1.0210644251751853}, "output_size": [], "output_type": "float32", "id": "adam/sub_1"}, {"mem": 0, "op_type": "RealDiv", "comp_cost": {"mock_device_0": 1.0343260399729497, "mock_device_1": 1.04825751084266}, "output_size": [], "output_type": "float32", "id": "adam/truediv"}, {"mem": 0, "op_type": "Placeholder", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "resource", "id": "adam/Sub_2/ReadVariableOp/resource"}, {"mem": 0, "op_type": "ReadVariableOp", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [3072, 10], "output_type": "float32", "id": "adam/Sub_2/ReadVariableOp"}, {"mem": 0, "op_type": "Sub", "comp_cost": {"mock_device_0": 1.9174735610696287, "mock_device_1": 1.9196918500504223}, "output_size": [3072, 10], "output_type": "float32", "id": "adam/Sub_2"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "adam/Const_1"}, {"mem": 0, "op_type": "Mul", "comp_cost": {"mock_device_0": 1.034756101913583, "mock_device_1": 1.0336757963725756}, "output_size": [3072, 10], "output_type": "float32", "id": "adam/Mul_1"}, {"mem": 0, "op_type": "AssignAddVariableOp", "comp_cost": {"mock_device_0": 1.911876611428752, "mock_device_1": 1.8610215811553579}, "output_size": [], "output_type": "float32", "id": "adam/AssignAddVariableOp"}, {"mem": 0, "op_type": "Square", "comp_cost": {"mock_device_0": 0.9619233549735231, "mock_device_1": 0.9549817623796718}, "output_size": [3072, 10], "output_type": "float32", "id": "adam/Square"}, {"mem": 0, "op_type": "Placeholder", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "resource", "id": "adam/Sub_3/ReadVariableOp/resource"}, {"mem": 0, "op_type": "ReadVariableOp", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [3072, 10], "output_type": "float32", "id": "adam/Sub_3/ReadVariableOp"}, {"mem": 0, "op_type": "Sub", "comp_cost": {"mock_device_0": 0.973385258614302, "mock_device_1": 0.9379908578926669}, "output_size": [3072, 10], "output_type": "float32", "id": "adam/Sub_3"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "adam/Const_2"}, {"mem": 0, "op_type": "Mul", "comp_cost": {"mock_device_0": 1.0130444952585607, "mock_device_1": 0.9898854214913317}, "output_size": [3072, 10], "output_type": "float32", "id": "adam/Mul_2"}, {"mem": 0, "op_type": "AssignAddVariableOp", "comp_cost": {"mock_device_0": 0.9955034838438139, "mock_device_1": 1.008548635806855}, "output_size": [], "output_type": "float32", "id": "adam/AssignAddVariableOp_1"}, {"mem": 0, "op_type": "ReadVariableOp", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [3072, 10], "output_type": "float32", "id": "adam/Mul_3/ReadVariableOp"}, {"mem": 0, "op_type": "Mul", "comp_cost": {"mock_device_0": 1.0296024702570534, "mock_device_1": 1.0567832799219605}, "output_size": [3072, 10], "output_type": "float32", "id": "adam/Mul_3"}, {"mem": 0, "op_type": "ReadVariableOp", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [3072, 10], "output_type": "float32", "id": "adam/Cast_4/ReadVariableOp"}, {"mem": 0, "op_type": "Sqrt", "comp_cost": {"mock_device_0": 1.0141064121226981, "mock_device_1": 1.0127669186978465}, "output_size": [3072, 10], "output_type": "float32", "id": "adam/Sqrt_1"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "adam/Const_3"}, {"mem": 0, "op_type": "AddV2", "comp_cost": {"mock_device_0": 1.0243407542228393, "mock_device_1": 1.047209032355424}, "output_size": [3072, 10], "output_type": "float32", "id": "adam/Add_1"}, {"mem": 0, "op_type": "RealDiv", "comp_cost": {"mock_device_0": 1.9009471988141415, "mock_device_1": 1.8888302694431331}, "output_size": [3072, 10], "output_type": "float32", "id": "adam/truediv_1"}, {"mem": 0, "op_type": "AssignSubVariableOp", "comp_cost": {"mock_device_0": 1.9499479579988317, "mock_device_1": 1.952256826200272}, "output_size": [], "output_type": "float32", "id": "adam/AssignSubVariableOp"}, {"mem": 0, "op_type": "ReadVariableOp", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "adam/Cast_5/ReadVariableOp"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "int64", "id": "adam/Const_4"}, {"mem": 0, "op_type": "ReadVariableOp", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "int64", "id": "adam/ReadVariableOp_1"}, {"mem": 0, "op_type": "AddV2", "comp_cost": {"mock_device_0": 1.0025664906199672, "mock_device_1": 0.994686007463164}, "output_size": [], "output_type": "int64", "id": "adam/add_2"}, {"mem": 0, "op_type": "Cast", "comp_cost": {"mock_device_0": 1.0218306147948586, "mock_device_1": 1.0542892657267298}, "output_size": [], "output_type": "float32", "id": "adam/Cast_6"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "adam/Cast_7/x"}, {"mem": 0, "op_type": "Pow", "comp_cost": {"mock_device_0": 0.9837063569700084, "mock_device_1": 0.9751068579503825}, "output_size": [], "output_type": "float32", "id": "adam/Pow_2"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "adam/Cast_8/x"}, {"mem": 256, "op_type": "Pow", "comp_cost": {"mock_device_0": 1.0452364320813938, "mock_device_1": 1.0010517536211359}, "output_size": [], "output_type": "float32", "id": "adam/Pow_3"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "adam/sub_4/x"}, {"mem": 0, "op_type": "Sub", "comp_cost": {"mock_device_0": 0.9605453553992436, "mock_device_1": 1.0103345334760259}, "output_size": [], "output_type": "float32", "id": "adam/sub_4"}, {"mem": 0, "op_type": "Sqrt", "comp_cost": {"mock_device_0": 1.0235796271786977, "mock_device_1": 1.037369850275406}, "output_size": [], "output_type": "float32", "id": "adam/Sqrt_2"}, {"mem": 0, "op_type": "Mul", "comp_cost": {"mock_device_0": 1.040162156519853, "mock_device_1": 1.0336917138558501}, "output_size": [], "output_type": "float32", "id": "adam/mul_4"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "adam/sub_5/x"}, {"mem": 0, "op_type": "Sub", "comp_cost": {"mock_device_0": 1.0071341334076183, "mock_device_1": 1.0162022207133452}, "output_size": [], "output_type": "float32", "id": "adam/sub_5"}, {"mem": 0, "op_type": "RealDiv", "comp_cost": {"mock_device_0": 1.0334068335409563, "mock_device_1": 0.9798735816203882}, "output_size": [], "output_type": "float32", "id": "adam/truediv_2"}, {"mem": 0, "op_type": "Placeholder", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "resource", "id": "adam/Sub_6/ReadVariableOp/resource"}, {"mem": 0, "op_type": "ReadVariableOp", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [10], "output_type": "float32", "id": "adam/Sub_6/ReadVariableOp"}, {"mem": 0, "op_type": "Sub", "comp_cost": {"mock_device_0": 1.0164867603872294, "mock_device_1": 0.9950097694583084}, "output_size": [10], "output_type": "float32", "id": "adam/Sub_6"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "adam/Const_5"}, {"mem": 0, "op_type": "Mul", "comp_cost": {"mock_device_0": 0.9514852778393322, "mock_device_1": 1.006873452243846}, "output_size": [10], "output_type": "float32", "id": "adam/Mul_5"}, {"mem": 0, "op_type": "AssignAddVariableOp", "comp_cost": {"mock_device_0": 0.9633432422892793, "mock_device_1": 0.9464781007248746}, "output_size": [], "output_type": "float32", "id": "adam/AssignAddVariableOp_2"}, {"mem": 0, "op_type": "Square", "comp_cost": {"mock_device_0": 1.010403668658935, "mock_device_1": 1.0362251691599476}, "output_size": [10], "output_type": "float32", "id": "adam/Square_1"}, {"mem": 0, "op_type": "Placeholder", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "resource", "id": "adam/Sub_7/ReadVariableOp/resource"}, {"mem": 0, "op_type": "ReadVariableOp", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [10], "output_type": "float32", "id": "adam/Sub_7/ReadVariableOp"}, {"mem": 0, "op_type": "Sub", "comp_cost": {"mock_device_0": 0.9908690549034953, "mock_device_1": 0.9869593021291619}, "output_size": [10], "output_type": "float32", "id": "adam/Sub_7"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "adam/Const_6"}, {"mem": 0, "op_type": "Mul", "comp_cost": {"mock_device_0": 0.971892338633048, "mock_device_1": 0.975665001505075}, "output_size": [10], "output_type": "float32", "id": "adam/Mul_6"}, {"mem": 0, "op_type": "AssignAddVariableOp", "comp_cost": {"mock_device_0": 0.9906117574945846, "mock_device_1": 0.9472110545090403}, "output_size": [], "output_type": "float32", "id": "adam/AssignAddVariableOp_3"}, {"mem": 0, "op_type": "ReadVariableOp", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [10], "output_type": "float32", "id": "adam/Mul_7/ReadVariableOp"}, {"mem": 0, "op_type": "Mul", "comp_cost": {"mock_device_0": 1.0437615107856912, "mock_device_1": 1.0546291371352463}, "output_size": [10], "output_type": "float32", "id": "adam/Mul_7"}, {"mem": 0, "op_type": "ReadVariableOp", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [10], "output_type": "float32", "id": "adam/Cast_9/ReadVariableOp"}, {"mem": 0, "op_type": "Sqrt", "comp_cost": {"mock_device_0": 0.9837393396407664, "mock_device_1": 1.0300146040680842}, "output_size": [10], "output_type": "float32", "id": "adam/Sqrt_3"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "adam/Const_7"}, {"mem": 0, "op_type": "AddV2", "comp_cost": {"mock_device_0": 1.0239538971305049, "mock_device_1": 1.0317741068074386}, "output_size": [10], "output_type": "float32", "id": "adam/Add_3"}, {"mem": 0, "op_type": "RealDiv", "comp_cost": {"mock_device_0": 1.042775406789488, "mock_device_1": 1.0366811069024082}, "output_size": [10], "output_type": "float32", "id": "adam/truediv_3"}, {"mem": 0, "op_type": "AssignSubVariableOp", "comp_cost": {"mock_device_0": 1.0212262620233585, "mock_device_1": 0.9709999137886547}, "output_size": [], "output_type": "float32", "id": "adam/AssignSubVariableOp_1"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "int64", "id": "adam/Const_8"}, {"mem": 0, "op_type": "ReadVariableOp", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "int64", "id": "adam/ReadVariableOp_2"}, {"mem": 256, "op_type": "AddV2", "comp_cost": {"mock_device_0": 0.9664834560718008, "mock_device_1": 1.0170400545222995}, "output_size": [], "output_type": "int64", "id": "adam/add_4"}, {"mem": 0, "op_type": "AssignVariableOp", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "adam/AssignVariableOp"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "int32", "id": "Rank"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "int32", "id": "range/start"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "int32", "id": "range/delta"}, {"mem": 0, "op_type": "Range", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [0], "output_type": "int32", "id": "range"}, {"mem": 0, "op_type": "Sum", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "Sum"}, {"mem": 0, "op_type": "Placeholder", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "resource", "id": "ReadVariableOp/resource"}, {"mem": 0, "op_type": "ReadVariableOp", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "ReadVariableOp"}, {"mem": 0, "op_type": "AddV2", "comp_cost": {"mock_device_0": 1.0423041146469088, "mock_device_1": 1.0653987989062463}, "output_size": [], "output_type": "float32", "id": "add_1"}, {"mem": 0, "op_type": "AssignVariableOp", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "AssignVariableOp"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "int32", "id": "Cast/x"}, {"mem": 0, "op_type": "Cast", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "Cast"}, {"mem": 0, "op_type": "Placeholder", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "resource", "id": "ReadVariableOp_1/resource"}, {"mem": 0, "op_type": "ReadVariableOp", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "ReadVariableOp_1"}, {"mem": 256, "op_type": "AddV2", "comp_cost": {"mock_device_0": 1.02072529261779, "mock_device_1": 1.0261973044663035}, "output_size": [], "output_type": "float32", "id": "add_2"}, {"mem": 0, "op_type": "AssignVariableOp", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "AssignVariableOp_1"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [2], "output_type": "int32", "id": "Shape"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [2], "output_type": "int32", "id": "Shape_1"}, {"mem": 0, "op_type": "Squeeze", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [200], "output_type": "uint8", "id": "Squeeze"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "int32", "id": "ArgMax/dimension"}, {"mem": 0, "op_type": "ArgMax", "comp_cost": {"mock_device_0": 2.0948539660340946, "mock_device_1": 2.085726727444986}, "output_size": [200], "output_type": "int64", "id": "ArgMax"}, {"mem": 1792, "op_type": "Cast", "comp_cost": {"mock_device_0": 1.0297868239142656, "mock_device_1": 1.0104989469484948}, "output_size": [200], "output_type": "int32", "id": "Cast_1"}, {"mem": 0, "op_type": "Cast", "comp_cost": {"mock_device_0": 0.9969132532076298, "mock_device_1": 1.0227659652378394}, "output_size": [200], "output_type": "uint8", "id": "Cast_2"}, {"mem": 0, "op_type": "Equal", "comp_cost": {"mock_device_0": 1.0190937448059412, "mock_device_1": 0.9625103975631981}, "output_size": [200], "output_type": "bool", "id": "Equal"}, {"mem": 0, "op_type": "Cast", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [200], "output_type": "float32", "id": "Cast_3"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [2], "output_type": "int32", "id": "Reshape/shape"}, {"mem": 0, "op_type": "Reshape", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [200, 1], "output_type": "float32", "id": "Reshape"}, {"mem": 0, "op_type": "Squeeze", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [200], "output_type": "float32", "id": "Squeeze_1"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [1], "output_type": "int32", "id": "Const"}, {"mem": 0, "op_type": "Sum", "comp_cost": {"mock_device_0": 1.033871295589546, "mock_device_1": 1.04676295404192}, "output_size": [], "output_type": "float32", "id": "Sum_1"}, {"mem": 0, "op_type": "Placeholder", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "resource", "id": "ReadVariableOp_2/resource"}, {"mem": 0, "op_type": "ReadVariableOp", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "ReadVariableOp_2"}, {"mem": 0, "op_type": "AddV2", "comp_cost": {"mock_device_0": 1.0227123828443845, "mock_device_1": 1.0243507238898426}, "output_size": [], "output_type": "float32", "id": "add_3"}, {"mem": 0, "op_type": "AssignVariableOp", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "AssignVariableOp_2"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [1], "output_type": "int32", "id": "Shape_2"}, {"mem": 0, "op_type": "Const", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "int32", "id": "Cast_4/x"}, {"mem": 0, "op_type": "Cast", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "Cast_4"}, {"mem": 0, "op_type": "Placeholder", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "resource", "id": "ReadVariableOp_3/resource"}, {"mem": 0, "op_type": "ReadVariableOp", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "ReadVariableOp_3"}, {"mem": 256, "op_type": "AddV2", "comp_cost": {"mock_device_0": 0.995596975574983, "mock_device_1": 0.987039818607048}, "output_size": [], "output_type": "float32", "id": "add_4"}, {"mem": 0, "op_type": "AssignVariableOp", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "AssignVariableOp_3"}, {"mem": 0, "op_type": "Identity", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "Identity"}, {"mem": 0, "op_type": "NoOp", "comp_cost": {"mock_device_0": 0.0, "mock_device_1": 0.0}, "output_size": [], "output_type": "float32", "id": "NoOp"}], "links": [{"source": "input", "target": "sequential_1/flatten_1/Reshape"}, {"source": "target", "target": "sparse_categorical_crossentropy/Cast"}, {"source": "target", "target": "Squeeze"}, {"source": "sequential_1/flatten_1/Reshape/shape", "target": "sequential_1/flatten_1/Reshape"}, {"source": "sequential_1/flatten_1/Reshape", "target": "sequential_1/dense_1/MatMul"}, {"source": "sequential_1/flatten_1/Reshape", "target": "gradient_tape/sequential_1/dense_1/MatMul/MatMul"}, {"source": "sequential_1/dense_1/Cast/ReadVariableOp/resource", "target": "sequential_1/dense_1/Cast/ReadVariableOp"}, {"source": "sequential_1/dense_1/Cast/ReadVariableOp/resource", "target": "adam/AssignSubVariableOp"}, {"source": "sequential_1/dense_1/Cast/ReadVariableOp", "target": "sequential_1/dense_1/MatMul"}, {"source": "sequential_1/dense_1/MatMul", "target": "sequential_1/dense_1/Add"}, {"source": "sequential_1/dense_1/Add/ReadVariableOp/resource", "target": "sequential_1/dense_1/Add/ReadVariableOp"}, {"source": "sequential_1/dense_1/Add/ReadVariableOp/resource", "target": "adam/AssignSubVariableOp_1"}, {"source": "sequential_1/dense_1/Add/ReadVariableOp", "target": "sequential_1/dense_1/Add"}, {"source": "sequential_1/dense_1/Add", "target": "sequential_1/dense_1/Softmax"}, {"source": "sequential_1/dense_1/Add", "target": "sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}, {"source": "sequential_1/dense_1/Softmax", "target": "ArgMax"}, {"source": "sparse_categorical_crossentropy/Cast", "target": "sparse_categorical_crossentropy/Cast_1"}, {"source": "sparse_categorical_crossentropy/Cast_1", "target": "sparse_categorical_crossentropy/Squeeze"}, {"source": "sparse_categorical_crossentropy/Squeeze", "target": "sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}, {"source": "sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits", "target": "sparse_categorical_crossentropy/Sum"}, {"source": "sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits", "target": "gradient_tape/sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/mul"}, {"source": "sparse_categorical_crossentropy/Const", "target": "sparse_categorical_crossentropy/Sum"}, {"source": "sparse_categorical_crossentropy/Sum", "target": "sparse_categorical_crossentropy/truediv"}, {"source": "sparse_categorical_crossentropy/Sum", "target": "gradient_tape/sparse_categorical_crossentropy/truediv/Neg"}, {"source": "sparse_categorical_crossentropy/Const_1", "target": "sparse_categorical_crossentropy/Prod"}, {"source": "sparse_categorical_crossentropy/Const_2", "target": "sparse_categorical_crossentropy/Prod"}, {"source": "sparse_categorical_crossentropy/Prod", "target": "sparse_categorical_crossentropy/Cast_2"}, {"source": "sparse_categorical_crossentropy/Cast_2", "target": "sparse_categorical_crossentropy/truediv"}, {"source": "sparse_categorical_crossentropy/Cast_2", "target": "gradient_tape/sparse_categorical_crossentropy/truediv/RealDiv"}, {"source": "sparse_categorical_crossentropy/Cast_2", "target": "gradient_tape/sparse_categorical_crossentropy/truediv/RealDiv_1"}, {"source": "sparse_categorical_crossentropy/Cast_2", "target": "gradient_tape/sparse_categorical_crossentropy/truediv/RealDiv_2"}, {"source": "sparse_categorical_crossentropy/truediv", "target": "add"}, {"source": "add/y", "target": "add"}, {"source": "add", "target": "Sum"}, {"source": "add", "target": "Identity"}, {"source": "ones", "target": "gradient_tape/sparse_categorical_crossentropy/truediv/RealDiv"}, {"source": "ones", "target": "gradient_tape/sparse_categorical_crossentropy/truediv/mul"}, {"source": "gradient_tape/sparse_categorical_crossentropy/truediv/RealDiv", "target": "gradient_tape/sparse_categorical_crossentropy/Reshape"}, {"source": "gradient_tape/sparse_categorical_crossentropy/truediv/Neg", "target": "gradient_tape/sparse_categorical_crossentropy/truediv/RealDiv_1"}, {"source": "gradient_tape/sparse_categorical_crossentropy/truediv/RealDiv_1", "target": "gradient_tape/sparse_categorical_crossentropy/truediv/RealDiv_2"}, {"source": "gradient_tape/sparse_categorical_crossentropy/truediv/RealDiv_2", "target": "gradient_tape/sparse_categorical_crossentropy/truediv/mul"}, {"source": "gradient_tape/sparse_categorical_crossentropy/Reshape/shape", "target": "gradient_tape/sparse_categorical_crossentropy/Reshape"}, {"source": "gradient_tape/sparse_categorical_crossentropy/Reshape", "target": "gradient_tape/sparse_categorical_crossentropy/Tile"}, {"source": "gradient_tape/sparse_categorical_crossentropy/Const", "target": "gradient_tape/sparse_categorical_crossentropy/Tile"}, {"source": "gradient_tape/sparse_categorical_crossentropy/Tile", "target": "gradient_tape/sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/ExpandDims"}, {"source": "gradient_tape/sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/ExpandDims/dim", "target": "gradient_tape/sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/ExpandDims"}, {"source": "gradient_tape/sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/ExpandDims", "target": "gradient_tape/sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/mul"}, {"source": "gradient_tape/sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/mul", "target": "gradient_tape/sequential_1/dense_1/Add/Sum"}, {"source": "gradient_tape/sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/mul", "target": "gradient_tape/sequential_1/dense_1/MatMul/MatMul"}, {"source": "gradient_tape/sequential_1/dense_1/Add/Shape_1", "target": "gradient_tape/sequential_1/dense_1/Add/Reshape"}, {"source": "gradient_tape/sequential_1/dense_1/Add/Sum/reduction_indices", "target": "gradient_tape/sequential_1/dense_1/Add/Sum"}, {"source": "gradient_tape/sequential_1/dense_1/Add/Sum", "target": "gradient_tape/sequential_1/dense_1/Add/Reshape"}, {"source": "gradient_tape/sequential_1/dense_1/Add/Reshape", "target": "adam/Identity_1"}, {"source": "gradient_tape/sequential_1/dense_1/Add/Reshape", "target": "adam/IdentityN"}, {"source": "gradient_tape/sequential_1/dense_1/MatMul/MatMul", "target": "adam/Identity"}, {"source": "gradient_tape/sequential_1/dense_1/MatMul/MatMul", "target": "adam/IdentityN"}, {"source": "adam/IdentityN", "target": "adam/Sub_2"}, {"source": "adam/IdentityN", "target": "adam/Square"}, {"source": "adam/IdentityN", "target": "adam/Sub_6"}, {"source": "adam/IdentityN", "target": "adam/Square_1"}, {"source": "adam/Cast/ReadVariableOp/resource", "target": "adam/Cast/ReadVariableOp"}, {"source": "adam/Cast/ReadVariableOp/resource", "target": "adam/Cast_5/ReadVariableOp"}, {"source": "adam/Cast/ReadVariableOp", "target": "adam/mul"}, {"source": "adam/Const", "target": "adam/add"}, {"source": "adam/ReadVariableOp/resource", "target": "adam/ReadVariableOp"}, {"source": "adam/ReadVariableOp/resource", "target": "adam/ReadVariableOp_1"}, {"source": "adam/ReadVariableOp/resource", "target": "adam/ReadVariableOp_2"}, {"source": "adam/ReadVariableOp/resource", "target": "adam/AssignVariableOp"}, {"source": "adam/ReadVariableOp", "target": "adam/add"}, {"source": "adam/add", "target": "adam/Cast_1"}, {"source": "adam/Cast_1", "target": "adam/Pow"}, {"source": "adam/Cast_1", "target": "adam/Pow_1"}, {"source": "adam/Cast_2/x", "target": "adam/Pow"}, {"source": "adam/Pow", "target": "adam/sub_1"}, {"source": "adam/Cast_3/x", "target": "adam/Pow_1"}, {"source": "adam/Pow_1", "target": "adam/sub"}, {"source": "adam/sub/x", "target": "adam/sub"}, {"source": "adam/sub", "target": "adam/Sqrt"}, {"source": "adam/Sqrt", "target": "adam/mul"}, {"source": "adam/mul", "target": "adam/truediv"}, {"source": "adam/sub_1/x", "target": "adam/sub_1"}, {"source": "adam/sub_1", "target": "adam/truediv"}, {"source": "adam/truediv", "target": "adam/Mul_3"}, {"source": "adam/Sub_2/ReadVariableOp/resource", "target": "adam/Sub_2/ReadVariableOp"}, {"source": "adam/Sub_2/ReadVariableOp/resource", "target": "adam/AssignAddVariableOp"}, {"source": "adam/Sub_2/ReadVariableOp/resource", "target": "adam/Mul_3/ReadVariableOp"}, {"source": "adam/Sub_2/ReadVariableOp", "target": "adam/Sub_2"}, {"source": "adam/Sub_2", "target": "adam/Mul_1"}, {"source": "adam/Const_1", "target": "adam/Mul_1"}, {"source": "adam/Mul_1", "target": "adam/AssignAddVariableOp"}, {"source": "adam/Square", "target": "adam/Sub_3"}, {"source": "adam/Sub_3/ReadVariableOp/resource", "target": "adam/Sub_3/ReadVariableOp"}, {"source": "adam/Sub_3/ReadVariableOp/resource", "target": "adam/AssignAddVariableOp_1"}, {"source": "adam/Sub_3/ReadVariableOp/resource", "target": "adam/Cast_4/ReadVariableOp"}, {"source": "adam/Sub_3/ReadVariableOp", "target": "adam/Sub_3"}, {"source": "adam/Sub_3", "target": "adam/Mul_2"}, {"source": "adam/Const_2", "target": "adam/Mul_2"}, {"source": "adam/Mul_2", "target": "adam/AssignAddVariableOp_1"}, {"source": "adam/Mul_3/ReadVariableOp", "target": "adam/Mul_3"}, {"source": "adam/Mul_3", "target": "adam/truediv_1"}, {"source": "adam/Cast_4/ReadVariableOp", "target": "adam/Sqrt_1"}, {"source": "adam/Sqrt_1", "target": "adam/Add_1"}, {"source": "adam/Const_3", "target": "adam/Add_1"}, {"source": "adam/Add_1", "target": "adam/truediv_1"}, {"source": "adam/truediv_1", "target": "adam/AssignSubVariableOp"}, {"source": "adam/Cast_5/ReadVariableOp", "target": "adam/mul_4"}, {"source": "adam/Const_4", "target": "adam/add_2"}, {"source": "adam/ReadVariableOp_1", "target": "adam/add_2"}, {"source": "adam/add_2", "target": "adam/Cast_6"}, {"source": "adam/Cast_6", "target": "adam/Pow_2"}, {"source": "adam/Cast_6", "target": "adam/Pow_3"}, {"source": "adam/Cast_7/x", "target": "adam/Pow_2"}, {"source": "adam/Pow_2", "target": "adam/sub_5"}, {"source": "adam/Cast_8/x", "target": "adam/Pow_3"}, {"source": "adam/Pow_3", "target": "adam/sub_4"}, {"source": "adam/sub_4/x", "target": "adam/sub_4"}, {"source": "adam/sub_4", "target": "adam/Sqrt_2"}, {"source": "adam/Sqrt_2", "target": "adam/mul_4"}, {"source": "adam/mul_4", "target": "adam/truediv_2"}, {"source": "adam/sub_5/x", "target": "adam/sub_5"}, {"source": "adam/sub_5", "target": "adam/truediv_2"}, {"source": "adam/truediv_2", "target": "adam/Mul_7"}, {"source": "adam/Sub_6/ReadVariableOp/resource", "target": "adam/Sub_6/ReadVariableOp"}, {"source": "adam/Sub_6/ReadVariableOp/resource", "target": "adam/AssignAddVariableOp_2"}, {"source": "adam/Sub_6/ReadVariableOp/resource", "target": "adam/Mul_7/ReadVariableOp"}, {"source": "adam/Sub_6/ReadVariableOp", "target": "adam/Sub_6"}, {"source": "adam/Sub_6", "target": "adam/Mul_5"}, {"source": "adam/Const_5", "target": "adam/Mul_5"}, {"source": "adam/Mul_5", "target": "adam/AssignAddVariableOp_2"}, {"source": "adam/Square_1", "target": "adam/Sub_7"}, {"source": "adam/Sub_7/ReadVariableOp/resource", "target": "adam/Sub_7/ReadVariableOp"}, {"source": "adam/Sub_7/ReadVariableOp/resource", "target": "adam/AssignAddVariableOp_3"}, {"source": "adam/Sub_7/ReadVariableOp/resource", "target": "adam/Cast_9/ReadVariableOp"}, {"source": "adam/Sub_7/ReadVariableOp", "target": "adam/Sub_7"}, {"source": "adam/Sub_7", "target": "adam/Mul_6"}, {"source": "adam/Const_6", "target": "adam/Mul_6"}, {"source": "adam/Mul_6", "target": "adam/AssignAddVariableOp_3"}, {"source": "adam/Mul_7/ReadVariableOp", "target": "adam/Mul_7"}, {"source": "adam/Mul_7", "target": "adam/truediv_3"}, {"source": "adam/Cast_9/ReadVariableOp", "target": "adam/Sqrt_3"}, {"source": "adam/Sqrt_3", "target": "adam/Add_3"}, {"source": "adam/Const_7", "target": "adam/Add_3"}, {"source": "adam/Add_3", "target": "adam/truediv_3"}, {"source": "adam/truediv_3", "target": "adam/AssignSubVariableOp_1"}, {"source": "adam/Const_8", "target": "adam/add_4"}, {"source": "adam/ReadVariableOp_2", "target": "adam/add_4"}, {"source": "adam/add_4", "target": "adam/AssignVariableOp"}, {"source": "Rank", "target": "range"}, {"source": "range/start", "target": "range"}, {"source": "range/delta", "target": "range"}, {"source": "range", "target": "Sum"}, {"source": "Sum", "target": "add_1"}, {"source": "ReadVariableOp/resource", "target": "ReadVariableOp"}, {"source": "ReadVariableOp/resource", "target": "AssignVariableOp"}, {"source": "ReadVariableOp", "target": "add_1"}, {"source": "add_1", "target": "AssignVariableOp"}, {"source": "Cast/x", "target": "Cast"}, {"source": "Cast", "target": "add_2"}, {"source": "ReadVariableOp_1/resource", "target": "ReadVariableOp_1"}, {"source": "ReadVariableOp_1/resource", "target": "AssignVariableOp_1"}, {"source": "ReadVariableOp_1", "target": "add_2"}, {"source": "add_2", "target": "AssignVariableOp_1"}, {"source": "Squeeze", "target": "Equal"}, {"source": "ArgMax/dimension", "target": "ArgMax"}, {"source": "ArgMax", "target": "Cast_1"}, {"source": "Cast_1", "target": "Cast_2"}, {"source": "Cast_2", "target": "Equal"}, {"source": "Equal", "target": "Cast_3"}, {"source": "Cast_3", "target": "Reshape"}, {"source": "Reshape/shape", "target": "Reshape"}, {"source": "Reshape", "target": "Squeeze_1"}, {"source": "Squeeze_1", "target": "Sum_1"}, {"source": "Const", "target": "Sum_1"}, {"source": "Sum_1", "target": "add_3"}, {"source": "ReadVariableOp_2/resource", "target": "ReadVariableOp_2"}, {"source": "ReadVariableOp_2/resource", "target": "AssignVariableOp_2"}, {"source": "ReadVariableOp_2", "target": "add_3"}, {"source": "add_3", "target": "AssignVariableOp_2"}, {"source": "Cast_4/x", "target": "Cast_4"}, {"source": "Cast_4", "target": "add_4"}, {"source": "ReadVariableOp_3/resource", "target": "ReadVariableOp_3"}, {"source": "ReadVariableOp_3/resource", "target": "AssignVariableOp_3"}, {"source": "ReadVariableOp_3", "target": "add_4"}, {"source": "add_4", "target": "AssignVariableOp_3"}]}